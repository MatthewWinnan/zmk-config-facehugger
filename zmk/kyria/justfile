default:
    @just --list --unsorted

config := absolute_path('config')
build := absolute_path('.build')
out := absolute_path('firmware')
draw := absolute_path('draw')

# build firmware for single board & shield combination
_build_single $board $shield *west_args:
    #!/usr/bin/env bash
    set -euo pipefail
    artifact="${shield:+${shield// /+}-}${board}"
    build_dir="{{ build / '$artifact' }}"

    echo "Building firmware for $artifact..."
    echo "Building in $build_dir....."
    west build -p -s zmk-facehugger/app -d "$build_dir" -b $board {{ west_args }} -- \
    ${shield:+-DSHIELD="$shield"}

    if [[ -f "$build_dir/compile_commands.json" ]]; then
        mkdir -p "{{ out }}" && cp "$build_dir/compile_commands.json" "{{ out }}/compile_commands.json"
    else
        echo "The compile commands file $build_dir/compile_commands.json, does not exist"
    fi

    if [[ -f "$build_dir/zephyr/zmk.uf2" ]]; then
        mkdir -p "{{ out }}" && cp "$build_dir/zephyr/zmk.uf2" "{{ out }}/$artifact.uf2"
    else
        mkdir -p "{{ out }}" && cp "$build_dir/zephyr/zmk.bin" "{{ out }}/$artifact.bin"
    fi

    # Remove the temp directory
    rm -rf "$build/"

left:
  just _build_single "nice_nano_v2" "kyria_rev3_left nice_view_adapter kyria_nice_view"

right:
  just _build_single "nice_nano_v2" "kyria_rev3_right nice_view_adapter kyria_nice_view"

all:
  just build_left
  just build_right
